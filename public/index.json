
[{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"![Alt text] (/workspaces/JCornand-VeilleCyber_Ayzzeur/resources/_gen/images/img/shufflecake-logo.svg \u0026ldquo;Shufflecake\u0026rdquo;)\nIntroduction # Shufflecake est un outil Linux de chiffrement de volumes puissant, rapide et facile d’utilisation, fonctionnant sur n’importe quel système de fichiers.\nEn complément d’information, l’outil est en C et un portage vers du Rust est envisagé.\nShufflecake est toujours en cours de développement par Elia Anzuoni et Tommaso “tomgag” Gagliardoni.\nLes principes du projet # Avant de commencer à utiliser Shufflecake, il est important de comprendre ses principaux concepts pour comprendre ses scénarios d’utilisation.\n-plausible deniability # Un des concepts est de pouvoir effectuer un deni plausible, mais qu’est-ce qu’un deni plausible ?\nLe déni plausible ou possibilité de nier de façon plausible (« plausible deniability »en anglais) est la possibilité, notamment dans le droit américain, pour des individus (généralement des responsables officiels dans le cadre d\u0026rsquo;une hiérarchie formelle ou informelle) de nier connaître L\u0026rsquo;existence d\u0026rsquo;actions condamnables commises par d\u0026rsquo;autres dans une organisation hiérarchique ou d\u0026rsquo;en être responsable si des preuves pouvant confirmer leur participation sont absentes, et ce même s\u0026rsquo;ils ont été personnellement impliqués ou ont volontairement ignoré ces actions.\nLe logiciel en soi ne peut pas être caché lors d’un scan, par contre le nombre de volumes caché quant à lui ne peut être deviné, ce qui en fait sa force.\nL’idée derrière le logo de l’outil est de visualiser nos volumes en plusieurs couches qui s’ouvriraient avec un mot de passe par couche.\nUn mot de passe permet d’accéder jusqu’à son niveau, si on a 15 niveaux et que l’on souhaite aller au 3ème, on utilisera notre 3ème mot de passe qui déverrouillera nos données sur 3 niveaux directement. On peut ainsi graduellement stocker nos informations en fonction de leurs importances.\n-Qu’est-ce que l’ORAM(Oblivious Random Access Machine) ? # Je tiens à parler de l\u0026rsquo;ORAM étant donné que c\u0026rsquo;était un terme que je ne connaissais pas avant de découvrir l\u0026rsquo;outil.\nRécemment, la mémoire vive inconsciente (ORAM) est un point qui attire l’attention, car il s\u0026rsquo;agit d\u0026rsquo;un outil cryptographique idéal pour masquer les modèles d\u0026rsquo;accès (access paterns plus d’infos : docamazon\nUne des fonctions primaires d’un cloud est le partage des données, qui est liée à l\u0026rsquo;évolutivité et à la mutualisation du cloud computing. Ne sachant pas si les données sont bien sécurisées, dans le cloud, on pourrait avoir tendance à vouloir pour des raisons de sécurité et de confidentialité chiffrer nos données. Cependant, les schémas de partage de données existants basés sur ORAM comportent diverses failles :\nune grande complexité de calcul ou une forte dépendance de primitives de cryptographie complexes (”À la création d’un système cryptographique (ou cryptosystème), le concepteur se fonde sur des briques appelées « primitives cryptographiques ». Pour cette raison, les primitives cryptographiques sont conçues pour effectuer une tâche précise et ce de la façon la plus fiable possible.”).\nDans le cas de Shufflecake, l\u0026rsquo;idée est que si on utilise l\u0026rsquo;ORAM pour accéder à un device, alors personne, même pas une run-time backdoor dans le firmware du device, peut connaître quel volume a été accédé et comment. Cependant, l\u0026rsquo;ORAM est extrêmement lente. Ils sont tellement lents dans les faits, que des limites théoriques précises sont connues, nous disant qu’aucun ORAM sécurisé ne peut être qu\u0026rsquo;extrêmement lent.\nProblèmes pour la mise en production: # Outil en cours de développement fort, il n\u0026rsquo;est pas encore recommandé pour la mise en production.\nPas encore de protection contre des multi-snapshot adverses (TRIM)\nDu fait de son développement, il peut arriver rarement qu\u0026rsquo;il écrive par-dessus des données sur lesquelles il ne devait pas écrire.\nUne application bridée à 15 niveaux pour l’instant par rapport à son modèle en couche.\n5.Ne prévient pas des trojan / keylogger\nAutres points # Un outil qui a des performances un tout petit peu plus réduites que un système crypté dès le départ.\nIl pourrait être sollicité notamment par lanceurs d’alerte, journalistes d’investigation et militants des droits de l’homme dans les régimes oppressifs. Mais aussi par toute organisation ayant besoin d’un certain niveau de sécurité pour leurs données.\nInstallation et utilisation # //mettre 2 warnings pour la mise en prod// Dépendances à installer\nsudo apt update sudo apt upgrade sudo apt install linux-headers-$(uname -r) libdevmapper-dev libgcrypt-dev make gcc git On récupère les binaires de ShuffleCake\ngit clone [https://codeberg.org/shufflecake/shufflecake-c.git](https://codeberg.org/shufflecake/shufflecake-c.git) Il faut chargé le module kerneldm-sflc Shufflecake a 2 composants : dm, un module kernel implémenté dans Shufflecake scheme comme un device-mapper visant le kernel de Linux, le second est shufflecake-userland, un outil permettant à l\u0026rsquo;utilisateur de créer et gérer des volumes caches. Le module du kernel DOIT être en service avant l\u0026rsquo;utilisation de l\u0026rsquo;outil userland.\nsudo insmod dm-sflc.ko Paramétrage\nsudo chown user shufflecake-c/ -R cd shufflecake-c make sudo cp ./shufflecake /usr/bin/ sudo chown 777 /usr/bin/shufflecake Préparation du volume chiffré\nsudo shufflecake init \u0026lt;block_device\u0026gt; Ouverture de n volume, chiffrement en fonction du mot de passe\nsudo shufflecake open \u0026lt;block_device\u0026gt; Fermeture des volumes\nsudo shufflecake close \u0026lt;block_device\u0026gt; Après utilisation de l\u0026rsquo;outil on peut enlever le module dm-sflc\nsudo rmmod dm-sflc Pour l’histoire # Il serait potentiel successeur à TrueCrypt (qui est plus connu sous le nom de VeraCrypt maintenant), le développement de TrueCrypt ayant été interrompu et la dernière version parue n\u0026rsquo;étant plus celle disponible auprès du public, ce qui est assez étonnant.\nTrueCrypt était un logiciel de chiffrement de disque très populaire, utilisé par des millions de personnes pour protéger leurs données sensibles. Cependant, en mai 2014, le site officiel de TrueCrypt a soudainement affiché un message indiquant que le développement du logiciel avait été arrêté et que TrueCrypt n\u0026rsquo;était plus sûr à utiliser. Le message recommandait aux utilisateurs de migrer vers des solutions alternatives comme BitLocker de Microsoft.\nCette annonce a suscité de nombreuses spéculations et théories du complot. Certains ont suggéré que les développeurs de TrueCrypt avaient été contraints d\u0026rsquo;arrêter le développement en raison de pressions gouvernementales ou de mandats secrets. D\u0026rsquo;autres ont émis l\u0026rsquo;hypothèse que des vulnérabilités critiques avaient été découvertes dans le logiciel, rendant son utilisation dangereuse. Peu de temps après l\u0026rsquo;arrêt de TrueCrypt, un projet open-source appelé VeraCrypt a émergé. VeraCrypt est basé sur le code source de TrueCrypt, mais avec des améliorations significatives en termes de sécurité et de fonctionnalités. Les développeurs de VeraCrypt ont corrigé plusieurs vulnérabilités découvertes dans TrueCrypt et ont ajouté des fonctionnalités supplémentaires pour renforcer la sécurité. VeraCrypt a rapidement gagné en popularité en tant que successeur de TrueCrypt, offrant une solution de chiffrement de disque fiable et sécurisée. Le projet est activement maintenu et mis à jour par une communauté de développeurs dédiée, assurant ainsi que les utilisateurs disposent d\u0026rsquo;un outil de chiffrement moderne et sécurisé.\nEn parallèle, des audits de sécurité indépendants ont été réalisés sur le code source de VeraCrypt pour garantir son intégrité et sa sécurité. Ces audits ont contribué à renforcer la confiance des utilisateurs dans le logiciel.\nAujourd\u0026rsquo;hui, VeraCrypt est largement utilisé par des particuliers, des entreprises et des organisations pour protéger leurs données sensibles. Il est disponible sur plusieurs plateformes, y compris Windows, macOS et Linux, et continue d\u0026rsquo;évoluer pour répondre aux besoins de sécurité des utilisateurs.\nEn résumé, bien que l\u0026rsquo;arrêt fut soudain, surprenant et mystérieux de TrueCrypt; VeraCrypt quand a lui émergé comme un digne successeur, offrant une solution de chiffrement de disque sécurisée et fiable pour les utilisateurs du monde entier.\nConclusion: # L’évolution de cet outil mérite une attention particulière, compte tenu de ses ambitions dans le domaine du chiffrement des données. Shufflecake se positionne ainsi comme un successeur prometteur de TrueCrypt, offrant des promesses de fonctionnalitées avancées et une sécurité renforcée. Son développement continu pourrait apporter des innovations significatives et répondre aux besoins croissants en matière de protection des informations sensibles.\nLien vers le site officiel:\nhttps://shufflecake.net/\nLien vers Codeberg: https://codeberg.org/shufflecake/shufflecake-c\nLien vers la partie algorithmitque de l\u0026rsquo;outil https://arxiv.org/html/2310.04589v2\n","externalUrl":null,"permalink":"/articles/shufflecake/","section":"Welcome to Blowfish!","summary":"![Alt text] (/workspaces/JCornand-VeilleCyber_Ayzzeur/resources/_gen/images/img/shufflecake-logo.","title":"Shufflecake","type":"articles"},{"content":"","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","externalUrl":null,"permalink":"/","section":"Veille Cybersecurite by Ayzzeur","summary":"","title":"Veille Cybersecurite by Ayzzeur","type":"page"},{"content":"Welcome to my website! I\u0026rsquo;m really happy you stopped by.\n","externalUrl":null,"permalink":"/articles/","section":"Welcome to Blowfish!","summary":"Welcome to my website!","title":"Welcome to Blowfish!","type":"articles"}]